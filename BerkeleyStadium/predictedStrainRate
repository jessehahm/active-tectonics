# -*- coding: utf-8 -*-
"""
Created on Sun Oct 19 12:21:51 2014

@author: wjh
"""

import IPython
import math
import matplotlib.pyplot as plt 
import pylab
import numpy as np
import scipy
from array import *

def transform(alpha):
    alpha = np.deg2rad(alpha)
    result = np.array([np.power(np.cos(alpha),2), 2*np.cos(alpha)*np.sin(alpha), np.power(np.sin(alpha),2)])
    return result

alphaRange = range(1,361)
G_coefficientMatrix = transform(alphaRange)
M_strainRates = [12.362,3.403,-15.446]

G_coefficientMatrix = np.matrix(G_coefficientMatrix).T
M_strainRates = np.matrix(M_strainRates).T

D_forwardData = []

row = 0
while row < 360:
    D_forwardData.append(np.dot(G_coefficientMatrix[row,:],M_strainRates)[0,0])
    row = row + 1
 
fig = plt.figure()
plt.scatter(alphaRange,D_forwardData)
plt.xlabel('alpha (degrees)')
plt.ylabel('microStrains per year')

stations = ['CD', 'BD', 'AD', 'BC', 'AC', 'AB']
strainRates = [0.479, -15.623, -6.602, -0.649, 12.333, 0.310]
alphas = [50.4, 97.3, 134.8, 141, 178.5, 225.2]
plt.scatter(alphas,strainRates, marker = 'v', color = 'r')

for i, txt in enumerate(stations):
    plt.annotate(txt, (alphas[i]+5,strainRates[i]+1))

matplotlib.pyplot.show()
